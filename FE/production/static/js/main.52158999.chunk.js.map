{"version":3,"sources":["components/GamePlay/publicComponent/StadiumBackground.tsx","components/GamePlay/publicComponent/ScoreBoard.tsx","components/GamePlay/publicComponent/SBOBoard.tsx","components/GamePlay/publicComponent/PAandNP.tsx","components/GamePlay/publicComponent/Record.tsx","components/GamePlay/publicComponent/Inning.tsx","components/GamePlay/publicComponent/PitchButton.tsx","components/GamePlay/publicComponent/Player.tsx","components/GamePlay/publicComponent/BlinkText.tsx","util/fetchRequest.js","data/GameData.ts","util/getCookieData.ts","reducer/sboStateReducer.ts","components/GamePlay/GamePlay.tsx","components/ScoreBoard/publicComponent/Inning.tsx","components/ScoreBoard/publicComponent/TotalScore.tsx","components/ScoreBoard/publicComponent/TeamScore.tsx","components/ScoreBoard/ScoreBoard.tsx","components/PlayerList/publicComponent/TeamPlayerList.tsx","components/PlayerList/PlayerList.tsx","router/GamePlayRouter.tsx","components/Intro/Intro.tsx","components/SelectGame/publicComponent/GameTitle.tsx","components/SelectGame/publicComponent/SelectGamePhrase.tsx","components/SelectGame/publicComponent/Versus.tsx","components/SelectGame/SelectGame.tsx","router/AppRouter.tsx","App.tsx","index.tsx"],"names":["StyledDiv","styled","div","StadiumBackground","StyledVersus","StyledScoreBoardTitle","p","StyledTeamName","StyledTeamScore","StyledVersusText","StyledPlayerText","props","isAwayTeam","ScoreBoard","awayTeamName","awayTeamScore","homeTeamName","homeTeamScore","onScoreBoardClick","onClick","StyledStrikeCountArea","StyledSBOTextArea","StyledStrike","StyledBall","StyledOut","SBOBoard","strikeCount","ballCount","outCount","strikeElements","index","push","key","ballElement","outElements","StyledPAandNP","StyledPitcherArea","StyledPitcherTitle","StyledPitcherName","StyledPitches","StyledBatterArea","StyledBatterTitle","StyledBatterName","StyledAtBat","StyledHit","PAandNP","pitcherName","pitches","batterName","atBat","hit","StyledRecord","StyledRecordWrap","StyledPlayerInfo","StyledHistoryWrap","StyledHistory","Record","logs","onRecordClick","map","log","lineUp","name","hitLog","detail","abc","convertSBOtoString","InningText","Inning","inningText","PitchButtonAnimation","keyframes","StyledPitchButton","button","PitchButton","pitchText","onRequestButtonClick","FirstRunner","SecondRunner","ThirdRunner","Player","baseIndex","playerElements","blinker","BlinkTextWrap","BlinkText","blinkText","fetchRequest","url","method","userId","fetch","mode","cache","headers","GameData","_isAwayTeam","_teamId","_gameId","_teamName","_instance","Error","this","teamId","gameId","teamName","getCookieData","Cookies","get","sboStateReducer","state","action","type","strike","ball","out","StyledWaitingWrap","StyledWaitingImage","StyledIntroMovieWrap","withRouter","history","useState","undefined","gameDetailObj","setGameDetailObj","waiting","setWaiting","isDefence","setIsDefence","isPitchAvailable","setIsPitchAvailable","useReducer","sboState","dispatchSBOState","requestCurrentStatus","process","cvtUrl","replace","getInstance","getGameId","toString","then","response","json","games","console","score","turn","getIsAwayTeam","setTimeout","catch","error","alert","useEffect","id","muted","autoPlay","loop","width","src","away","awayTotalScore","home","homeTotalScore","pitcher","hitter","inning","base","getTeamId","InningUL","ul","li","className","TotalScore","totalScore","TeamName","BaseballImage","isSelectedTeam","InningScore","TeamScore","scores","slidein","ScoreBoardWrap","scoreList","setScoreList","scoreInformation","team","getTeamName","TeamPlayerListWrap","h1","RecordArea","BatterTitle","SectionTitle","AverageTitle","PlayerArea","Batter","Section","Average","StyledUL","TeamPlayerList","playerInfo","totalBat","totalHit","totalOut","player","toFixed","average","PlayerList","playerList","setPlayerList","teamInfo","players","total","bat","GamePlayRouter","path","component","GamePlay","StyledIntroMovie","IntroButtonAnimation","IntroButton","isLogIn","setIsLogIn","window","location","href","StyledP","GameTitle","title","SelectGamePhrase","StyledGameTitle","StyledAwayTeamName","available","StyledHomeTeamName","Versus","awayTeamAvailable","homeTeamAvailable","awayTeamId","homeTeamId","onTeamClick","setGames","result","requestGameAvailable","setIsAwayTeam","setTeamId","setGameId","setTeamName","height","opacity","numberOfPieces","game","awayUser","homeUser","awayId","homeId","AppRouter","exact","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.52158999.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledDiv = styled.div`\r\n  position: absolute;\r\n  top: 140px;\r\n  width: 1000px;\r\n  height: 580px;\r\n  background-image: url(\"http://dev-angelo.dlinkddns.com/baseball_bg.jpg\");\r\n  background-size: 100% 100%;\r\n  border-right: 2px solid white;\r\n  z-index: 0;\r\n`;\r\n\r\nfunction StadiumBackground() {\r\n  return (\r\n    <StyledDiv>\r\n    </StyledDiv>\r\n  );\r\n}\r\n\r\nexport default StadiumBackground;\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledVersus = styled.div`\r\n  width: 1000px;\r\n  height: 140px;\r\n  position: absolute;\r\n  border-bottom: 2px solid white;\r\n  border-right: 2px solid white;\r\n  color: white;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst StyledScoreBoardTitle = styled.p`\r\n  width: 400px;\r\n  position: relative;\r\n  font-size: 28px;\r\n  margin: 0 auto;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst StyledTeamName = styled.p`\r\n  width: 350px;\r\n  float: left;\r\n  position: relative;\r\n  font-size: 33px;\r\n  margin: 0 auto;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin-left: 20px;\r\n`;\r\n\r\nconst StyledTeamScore = styled.p`\r\n  width: 100px;\r\n  float: left;\r\n  position: relative;\r\n  font-size: 33px;\r\n  margin: 0 auto;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin-left: 20px;\r\n`;\r\n\r\nconst StyledVersusText = styled.p`\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  font-size: 26px;\r\n  margin: 0 auto;\r\n  color: gray;\r\n  font-weight: bold;\r\n  margin-top: 7px;\r\n`;\r\n\r\ninterface PlayerTextType {\r\n  isAwayTeam?: boolean;\r\n}\r\n\r\nconst StyledPlayerText = styled.p<PlayerTextType>`\r\n  width: 350px;\r\n  float: left;\r\n  position: relative;\r\n  font-size: 26px;\r\n  font-weight: bold;\r\n  color: #cc0000;\r\n  text-align: center;\r\n  /* margin-left: 20px; */\r\n  margin-left: ${props => props.isAwayTeam ? \"20px\" : \"630px\"};\r\n`;\r\n\r\ninterface Props {\r\n  awayTeamName: string,\r\n  awayTeamScore: number,\r\n  homeTeamName: string,\r\n  homeTeamScore: number,\r\n  isAwayTeam: boolean,\r\n  onScoreBoardClick(): void\r\n}\r\n\r\nconst ScoreBoard: React.FunctionComponent<Props> = function({awayTeamName, awayTeamScore, homeTeamName, homeTeamScore, isAwayTeam, onScoreBoardClick}) {\r\n  return (\r\n    <StyledVersus onClick={onScoreBoardClick}>\r\n      <StyledScoreBoardTitle>BaseballGame Online</StyledScoreBoardTitle>\r\n      <StyledTeamName>{awayTeamName}</StyledTeamName>\r\n      <StyledTeamScore>{awayTeamScore}</StyledTeamScore>\r\n      <StyledVersusText>VS</StyledVersusText>\r\n      <StyledTeamScore>{homeTeamScore}</StyledTeamScore>\r\n      <StyledTeamName>{homeTeamName}</StyledTeamName>\r\n      <StyledPlayerText isAwayTeam={isAwayTeam}>Player</StyledPlayerText>\r\n    </StyledVersus>\r\n  );\r\n}\r\n\r\nexport default ScoreBoard;\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledDiv = styled.div`\r\n  width: 200px;\r\n  height: 150px;\r\n  top: 155px;\r\n  left: 15px;\r\n  position: absolute;\r\n  border: 1px solid white;\r\n  color: white;\r\n`;\r\n\r\nconst StyledStrikeCountArea = styled.div`\r\n  width: 200px;\r\n  height: 50px;\r\n  position: relative;\r\n  color: white;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst StyledSBOTextArea = styled.p`\r\n  width: 50px;\r\n  height: 50px;\r\n  position: relative;\r\n  float: left;\r\n  color: white;\r\n  text-align: center;\r\n  font-size: 24px;\r\n  line-height: 50px;\r\n`;\r\n\r\nconst StyledStrike = styled.p`\r\n  width: 30px;\r\n  height: 30px;\r\n  margin: 10px;\r\n  position: relative;\r\n  float: left;\r\n  background-color: yellow;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst StyledBall = styled.p`\r\n  width: 30px;\r\n  height: 30px;\r\n  margin: 10px;\r\n  position: relative;\r\n  float: left;\r\n  background-color: green;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst StyledOut = styled.p`\r\n  width: 30px;\r\n  height: 30px;\r\n  margin: 10px;\r\n  position: relative;\r\n  float: left;\r\n  background-color: red;\r\n  border-radius: 50%;\r\n`;\r\n\r\ninterface Props {\r\n  strikeCount: number,\r\n  ballCount: number,\r\n  outCount: number\r\n}\r\n\r\nconst SBOBoard: React.FunctionComponent<Props> = function({strikeCount, ballCount, outCount}) {\r\n  const strikeElements = [];\r\n  for (let index = 0 ; index < strikeCount ; ++index) {\r\n    strikeElements.push(<StyledStrike key={index} />);\r\n  }\r\n\r\n  const ballElement = [];\r\n  for (let index = 0 ; index < ballCount ; ++index) {\r\n    ballElement.push(<StyledBall key={index} />);\r\n  }\r\n\r\n  const outElements = [];\r\n  for (let index = 0 ; index < outCount ; ++index) {\r\n    outElements.push(<StyledOut key={index} />);\r\n  }\r\n\r\n  return (\r\n    <StyledDiv>\r\n        <StyledStrikeCountArea>\r\n          <StyledSBOTextArea>S</StyledSBOTextArea>\r\n          {strikeElements}\r\n        </StyledStrikeCountArea>\r\n        <StyledStrikeCountArea>\r\n          <StyledSBOTextArea>B</StyledSBOTextArea>\r\n          {ballElement}\r\n        </StyledStrikeCountArea>\r\n        <StyledStrikeCountArea>\r\n          <StyledSBOTextArea>O</StyledSBOTextArea>\r\n          {outElements}\r\n        </StyledStrikeCountArea>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nexport default SBOBoard;\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledPAandNP = styled.div`\r\n  width: 280px;\r\n  height: 140px;\r\n  left: 1000px;\r\n  position: absolute;\r\n  border: 1px solid white;\r\n  color: white;\r\n  background-color: black;\r\n  box-shadow: 0 0 0 3px gray inset; \r\n  border-radius: 15px;\r\n`;\r\n\r\nconst StyledPitcherArea = styled.div`\r\n  width: 280px;\r\n  height: 70px;\r\n  position: relative;\r\n  color: white;\r\n  font-size: 22px;\r\n  line-height: 35px;\r\n  padding-left: 5px;\r\n`;\r\n\r\nconst StyledPitcherTitle = styled.p`\r\n  width: 280px;\r\n  height: 35px;\r\n  position: relative;\r\n  color: #ff7733;\r\n`;\r\n\r\nconst StyledPitcherName = styled.p`\r\n  height: 35px;\r\n  position: relative;\r\n  float: left;\r\n  color: white;\r\n`;\r\n\r\nconst StyledPitches = styled.p`\r\n  height: 35px;\r\n  position: relative;\r\n  float: left;\r\n  color: steelblue;\r\n  padding-left: 10px;\r\n`;\r\n\r\nconst StyledBatterArea = styled.div`\r\n  width: 280px;\r\n  height: 70px;\r\n  position: relative;\r\n  color: white;\r\n  font-size: 22px;\r\n  line-height: 35px;\r\n  padding-left: 5px;\r\n`;\r\n\r\nconst StyledBatterTitle = styled.p`\r\n  width: 280px;\r\n  height: 35px;\r\n  position: relative;\r\n  color: #009900;\r\n`;\r\n\r\nconst StyledBatterName = styled.p`\r\n  height: 35px;\r\n  position: relative;\r\n  float: left;\r\n  color: white;\r\n`;\r\n\r\nconst StyledAtBat = styled.p`\r\n  height: 35px;\r\n  position: relative;\r\n  float: left;\r\n  color: steelblue;\r\n  padding-left: 10px;\r\n`;\r\n\r\nconst StyledHit = styled.p`\r\n  height: 35px;\r\n  position: relative;\r\n  float: left;\r\n  color: steelblue;\r\n`;\r\n\r\ninterface Props {\r\n  pitcherName: string,\r\n  pitches: number,\r\n  batterName: string,\r\n  atBat: number,\r\n  hit: number\r\n}\r\n\r\nconst PAandNP: React.FunctionComponent<Props> = function({pitcherName, pitches, batterName, atBat, hit}) {\r\n  return (\r\n    <StyledPAandNP>\r\n      <StyledPitcherArea>\r\n        <StyledPitcherTitle>투수</StyledPitcherTitle>\r\n        <StyledPitcherName>{pitcherName}</StyledPitcherName><StyledPitches>#{pitches}</StyledPitches>\r\n      </StyledPitcherArea>\r\n      <StyledBatterArea>\r\n        <StyledBatterTitle>타자</StyledBatterTitle>\r\n        <StyledBatterName>{batterName}</StyledBatterName><StyledAtBat>#{atBat}타석</StyledAtBat><StyledHit>#{hit}안타</StyledHit>\r\n      </StyledBatterArea>\r\n\r\n    </StyledPAandNP>\r\n  )\r\n}\r\n\r\nexport default PAandNP;\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledRecord = styled.div`\r\n  width: 280px;\r\n  height: 580px;\r\n  left: 1000px;\r\n  top: 140px;\r\n  position: absolute;\r\n  color: white;\r\n  background-color: black;\r\n  overflow: hidden;\r\n  border: 1px solid white;\r\n  font-size: 18px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst StyledRecordWrap = styled.div`\r\n  width: 280px;\r\n  position: relative;\r\n  color: black;\r\n  background-color: white;\r\n  box-shadow: 0 0 0 3px gray inset; \r\n  border-radius: 15px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst StyledPlayerInfo = styled.div`\r\n  width: 280px;\r\n  position: relative;\r\n  color: #cc0000;\r\n  text-align: center;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n`;\r\n\r\nconst StyledHistoryWrap = styled.div`\r\n  width: 280px;\r\n  position: relative;\r\n`;\r\n\r\nconst StyledHistory = styled.div`\r\n  width: 280px;\r\n  position: relative;\r\n  text-align: center;\r\n`;\r\n\r\n\r\ninterface History {\r\n  name: string,\r\n  lineUp: number,\r\n  hitLog: Array<string>,\r\n}\r\n\r\ninterface Props {\r\n  logs: Array<History>,\r\n  onRecordClick(): void\r\n}\r\n\r\nconst Record: React.FunctionComponent<Props> = function({logs, onRecordClick}) {\r\n  let strike = 0;\r\n  let ball = 0;\r\n\r\n  const convertSBOtoString = (abc: string) => {\r\n    switch (abc) {\r\n      case 'S': {\r\n        strike++;\r\n        return '스트라이크';\r\n      }\r\n      case 'B': {\r\n        ball++;\r\n        return '볼';\r\n      }\r\n      case 'O': {\r\n        return '아웃!';\r\n      }\r\n      case 'H': {\r\n        return '안타!';\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <StyledRecord onClick={onRecordClick}>\r\n      {logs.map((log: History, index: number) => (\r\n        <StyledRecordWrap key={index}>\r\n          <StyledPlayerInfo>{log.lineUp}타자 {log.name}</StyledPlayerInfo>  \r\n          <StyledHistoryWrap>\r\n            {log.hitLog.map((detail: string, index: number) => (\r\n              <StyledHistory key={index}>{convertSBOtoString(detail)}</StyledHistory>\r\n             ))}\r\n          </StyledHistoryWrap>\r\n        </StyledRecordWrap>\r\n      ))}\r\n    </StyledRecord>\r\n  );\r\n}\r\n\r\nexport default Record;","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst InningText = styled.p`\r\n  position: absolute;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  top: 150px;\r\n  left: 860px;\r\n  font-size: 30px;\r\n  color: white;\r\n  text-align: center;\r\n`;\r\n\r\ninterface Props {\r\n  inningText: string,\r\n}\r\n\r\nconst Inning: React.FunctionComponent<Props> = function({inningText}) {\r\n  return (\r\n    <InningText>\r\n      {inningText}\r\n    </InningText>\r\n  );\r\n}\r\n\r\nexport default Inning;","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nconst PitchButtonAnimation = keyframes `\r\n  0% { background-color: lightgray; }\r\n  100% { background-color: gray; }\r\n`;\r\n\r\nconst StyledPitchButton = styled.button`\r\n  position: absolute;\r\n  background-color: lightgray;\r\n  margin: 0 auto;\r\n  width: 200px;\r\n  top: 535px;\r\n  left: 400px;\r\n  font-size: 30px;\r\n  color: black;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  border-radius: 50px;\r\n\r\n  &:hover {\r\n    color: #cc0000;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active {\r\n    color: #cc0000;\r\n    background-color: gray;\r\n    animation-duration: 0.2s;\r\n    animation-name: ${PitchButtonAnimation};\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  pitchText: string,\r\n  onRequestButtonClick(): void\r\n}\r\n\r\nconst PitchButton: React.FunctionComponent<Props> = function({pitchText, onRequestButtonClick}) {\r\n  return (\r\n    <StyledPitchButton onClick={onRequestButtonClick}>\r\n      {pitchText}\r\n    </StyledPitchButton>\r\n  );\r\n}\r\n\r\nexport default PitchButton;","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst FirstRunner = styled.div`\r\n  position: absolute;\r\n  width: 100px;\r\n  height: 60px;\r\n  background-image: url(\"http://dev-angelo.dlinkddns.com/runner_12.png\");\r\n  background-size: 100% 100%;\r\n  z-index: 0;\r\n  top: 480px;\r\n  left: 800px;\r\n`;\r\n\r\nconst SecondRunner = styled.div`\r\n  position: absolute;\r\n  width: 100px;\r\n  height: 60px;\r\n  background-image: url(\"http://dev-angelo.dlinkddns.com/runner_12.png\");\r\n  background-size: 100% 100%;\r\n  z-index: 0;\r\n  top: 450px;\r\n  left: 450px;\r\n`;\r\n\r\n\r\nconst ThirdRunner = styled.div`\r\n  position: absolute;\r\n  width: 100px;\r\n  height: 60px;\r\n  background-image: url(\"http://dev-angelo.dlinkddns.com/runner_3.png\");\r\n  background-size: 100% 100%;\r\n  z-index: 0;\r\n  top: 480px;\r\n  left: 100px;\r\n`;\r\n\r\ninterface IPlayer {\r\n  baseIndex: number\r\n}\r\n\r\nconst Player: React.FunctionComponent<IPlayer> = function({baseIndex}) {\r\n  const playerElements = [];\r\n\r\n  if (baseIndex > 2) {\r\n    playerElements.push(<ThirdRunner />);\r\n  }\r\n\r\n  if (baseIndex > 1) {\r\n    playerElements.push(<SecondRunner />);\r\n  }\r\n\r\n  if (baseIndex > 0) {\r\n    playerElements.push(<FirstRunner />);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {playerElements}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Player;","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nconst blinker = keyframes `\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\nconst BlinkTextWrap = styled.p`\r\n  position: relative;\r\n  width: 500px;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  top: 50%;\r\n  left: 250px;\r\n  transform: translateY(-50);\r\n  font-size: 30px;\r\n  color: white;\r\n  text-align: center;\r\n  animation: ${blinker} 2s infinite;\r\n`\r\n\r\ninterface Props {\r\n  blinkText: string,\r\n}\r\n\r\nconst BlinkText: React.FunctionComponent<Props> = function({blinkText}) {\r\n  return (\r\n    <BlinkTextWrap>\r\n      {blinkText}\r\n    </BlinkTextWrap>\r\n  );\r\n}\r\n\r\nexport default BlinkText;","const fetchRequest = (url, method, userId) => {\r\n  return fetch(url, {\r\n    method: method,\r\n    mode: \"cors\",\r\n    cache: \"no-cache\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"userId\": userId\r\n    },\r\n  });\r\n};\r\n\r\nexport default fetchRequest;","class GameData {\r\n\r\n  private static _instance: GameData = new GameData();\r\n\r\n  private _isAwayTeam: boolean = false;\r\n  private _teamId: number = -1;\r\n  private _gameId: number = -1;\r\n  private _teamName: string = '';\r\n\r\n  constructor() {\r\n      if(GameData._instance){\r\n          throw new Error(\"Error: Instantiation failed: Use SingletonClass.getInstance() instead of new.\");\r\n      }\r\n      GameData._instance = this;\r\n  }\r\n\r\n  public static getInstance():GameData\r\n  {\r\n      return GameData._instance;\r\n  }\r\n\r\n  public setIsAwayTeam(isAwayTeam: boolean): void\r\n  {\r\n      this._isAwayTeam = isAwayTeam;\r\n  }\r\n\r\n  public getIsAwayTeam(): boolean\r\n  {\r\n      return this._isAwayTeam;\r\n  }\r\n\r\n  public setTeamId(teamId: number): void\r\n  {\r\n      this._teamId = teamId;\r\n  }\r\n\r\n  public getTeamId(): number\r\n  {\r\n      return this._teamId;\r\n  }\r\n\r\n  public setGameId(gameId: number): void\r\n  {\r\n      this._gameId = gameId;\r\n  }\r\n\r\n  public getGameId(): number\r\n  {\r\n      return this._gameId;\r\n  }\r\n\r\n  public setTeamName(teamName: string): void\r\n  {\r\n    this._teamName = teamName;\r\n  }\r\n\r\n  public getTeamName(): string\r\n  {\r\n      return this._teamName;\r\n  }\r\n}\r\n\r\nexport default GameData;","import Cookies from \"universal-cookie\";\r\n\r\nfunction getCookieData(key: string): string {\r\n  const cookies = new Cookies();\r\n  const data: string = cookies.get('userId');\r\n\r\n  return data;\r\n}\r\n\r\nexport default getCookieData;","interface ISBOStateReducer {\r\n  strike: number,\r\n  ball: number,\r\n  out: number\r\n}\r\n\r\ntype Action =\r\n | { type: 'setStrike', strike: number }\r\n | { type: 'setBall', ball: number }\r\n | { type: 'setOut', out: number };\r\n\r\n\r\nfunction sboStateReducer(state: ISBOStateReducer, action: Action) {\r\n  switch (action.type) {\r\n    case 'setStrike': {\r\n      return {...state, strike: action.strike}\r\n    }\r\n    case 'setBall': {\r\n      return {...state, ball: action.ball}\r\n    }\r\n    case 'setOut': {\r\n      return {...state, out: action.out}\r\n    }\r\n  }\r\n}\r\n\r\nexport default sboStateReducer;","import React, { useState, useEffect, useReducer } from 'react';\r\nimport styled from 'styled-components'\r\nimport StadiumBackground from './publicComponent/StadiumBackground'\r\nimport ScoreBoard from './publicComponent/ScoreBoard'\r\nimport SBOBoard from './publicComponent/SBOBoard';\r\nimport PAandNP from './publicComponent/PAandNP';\r\nimport Record from './publicComponent/Record';\r\nimport Inning from './publicComponent/Inning';\r\nimport PitchButton from './publicComponent/PitchButton';\r\nimport Player from './publicComponent/Player';\r\nimport BlinkText from './publicComponent/BlinkText';\r\nimport fetchRequest from '../../util/fetchRequest'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport GameData from '../../data/GameData'\r\nimport getCookieData from '../../util/getCookieData'\r\nimport sboStateReducer from '../../reducer/sboStateReducer'\r\n\r\nconst StyledDiv = styled.div`\r\n  position: absolute;\r\n  width: 1280px;\r\n  height: 720px;\r\n  margin: 0 auto;\r\n  z-index: 0;\r\n`;\r\n\r\nconst StyledWaitingWrap = styled.div`\r\n  position: absolute;\r\n  width: 1280px;\r\n  height: 720px;\r\n  margin: 0 auto;\r\n  color: white;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1;\r\n`;\r\n\r\nconst StyledWaitingImage = styled.div`\r\n  position: relative;\r\n  width: 540px;\r\n  height: 400px;\r\n  margin: 0 auto;\r\n  margin-top: 125px;\r\n  background-color: black;\r\n  background-image: url(\"http://dev-angelo.dlinkddns.com/giphy_2.gif\");\r\n  background-size: 100% 100%;\r\n  font-size: 24px;\r\n  z-index: 1;\r\n  color: black;\r\n`;\r\n\r\nconst StyledIntroMovieWrap = styled.div`\r\n  position: absolute;\r\n  width: 720px;\r\n  height: 480px;\r\n  margin-top: 193px;\r\n  margin-left: 374px;\r\n`;\r\n\r\ninterface Score {\r\n  strike: number,\r\n  ball: number,\r\n  out: number,\r\n  base: number\r\n}\r\n\r\ntype props = RouteComponentProps;\r\n\r\nconst GamePlay: React.FunctionComponent<props> = function({history}) {\r\n  const [gameDetailObj, setGameDetailObj] = useState<any>(undefined);\r\n  const [waiting, setWaiting] = useState(true);\r\n  const [isDefence, setIsDefence] = useState(false);\r\n  const [isPitchAvailable, setIsPitchAvailable] = useState(true);\r\n\r\n  const INITIAL_SBOCOUNT_STATE = {strike: 0, ball: 0, out: 0}\r\n  const [sboState, dispatchSBOState] = useReducer(sboStateReducer, INITIAL_SBOCOUNT_STATE);\r\n\r\n  function requestPitch() {\r\n    const url = process.env.REACT_APP_GAME_PITCH;\r\n    const cvtUrl = url?.replace(`{teamId}`, (GameData.getInstance().getTeamId()).toString());\r\n    setIsPitchAvailable(false);\r\n\r\n    fetchRequest(cvtUrl, \"GET\", getCookieData('userId'))\r\n    .then((response) => response.json())\r\n    .then((games) => {\r\n      requestCurrentStatus();\r\n    })\r\n    .catch((error) => {\r\n      alert(\"주의\");\r\n    });\r\n  }\r\n\r\n  function requestCurrentStatus() {\r\n    const url = process.env.REACT_APP_GAME_STATUS;\r\n    const cvtUrl = url?.replace(`{gameId}`, (GameData.getInstance().getGameId()).toString());\r\n\r\n    fetchRequest(cvtUrl, \"GET\", getCookieData('userId'))\r\n    .then((response) => response.json())\r\n    .then((games) => {\r\n      console.log(games);\r\n      dispatchSBOState({type: 'setStrike', strike: games.score.strike});\r\n      dispatchSBOState({type: 'setBall', ball: games.score.ball});\r\n      dispatchSBOState({type: 'setOut', out: games.score.out});\r\n      setGameDetailObj(games);\r\n\r\n      console.log(games.turn);\r\n\r\n      if ( (GameData.getInstance().getIsAwayTeam() && games.turn === \"초\") ||\r\n           (!GameData.getInstance().getIsAwayTeam() && games.turn === \"말\") ) {\r\n        setTimeout(() => {\r\n          setIsDefence(false);\r\n          setIsPitchAvailable(false);\r\n          requestCurrentStatus();\r\n        }, 1000);\r\n      }\r\n      else {\r\n        setIsPitchAvailable(true);\r\n        setIsDefence(true);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      alert(\"주의\");\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    requestCurrentStatus();\r\n    setWaiting(false);\r\n  }, [])\r\n\r\n  function onScoreBoardClick() {\r\n    history.push('/gameplay/scoreboard');\r\n  }\r\n\r\n  function onRecordClick() {\r\n    history.push('/gameplay/playerlist');\r\n  }\r\n\r\n  return (\r\n    <StyledDiv>\r\n      {waiting && <StyledWaitingWrap><StyledWaitingImage>게임을 불러오는중입니다...</StyledWaitingImage></StyledWaitingWrap>}\r\n      <StadiumBackground></StadiumBackground>\r\n      <StyledIntroMovieWrap>\r\n        <video id=\"test\" muted autoPlay loop width={270}>\r\n          <source src=\"http://dev-angelo.dlinkddns.com/logo.mp4\" type=\"video/mp4\" />\r\n        </video>\r\n      </StyledIntroMovieWrap>\r\n      {gameDetailObj && \r\n      <>\r\n      <ScoreBoard onScoreBoardClick={onScoreBoardClick}\r\n        awayTeamName={gameDetailObj.away}\r\n        awayTeamScore={gameDetailObj.awayTotalScore}\r\n        homeTeamName={gameDetailObj.home}\r\n        homeTeamScore={gameDetailObj.homeTotalScore}\r\n        isAwayTeam={GameData.getInstance().getIsAwayTeam()}\r\n      ></ScoreBoard>\r\n      <SBOBoard\r\n        strikeCount={sboState.strike}\r\n        ballCount={sboState.ball}\r\n        outCount={sboState.out}\r\n      />\r\n      <PAandNP \r\n        pitcherName={gameDetailObj.pitcher.name}\r\n        pitches={gameDetailObj.pitcher.pitches}\r\n        batterName={gameDetailObj.hitter.name}\r\n        atBat={gameDetailObj.hitter.atBat}\r\n        hit={gameDetailObj.hitter.hit}\r\n      />\r\n      <Record onRecordClick={onRecordClick}\r\n        logs={gameDetailObj.history}\r\n      />\r\n      <Inning\r\n        inningText={gameDetailObj.inning + `회 ` + gameDetailObj.turn}\r\n      />\r\n      <Player baseIndex={gameDetailObj.score.base}/>\r\n      {\r\n      (isDefence && isPitchAvailable) &&\r\n      <PitchButton\r\n        pitchText=\"PITCH!\"\r\n        onRequestButtonClick={requestPitch}\r\n      />\r\n      }\r\n      {\r\n        !isDefence &&\r\n        <BlinkText blinkText={\"상대팀이 투구중입니다\"}>\r\n        </BlinkText>\r\n\r\n      }\r\n      </>\r\n      }\r\n    </StyledDiv>\r\n  );\r\n}\r\n\r\nexport default withRouter(GamePlay);\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledDiv = styled.div`\r\n  position: relative;\r\n  width: 700px;\r\n  color: white;\r\n  font-size: 24px;\r\n  padding: 10px;\r\n`;\r\n\r\nconst InningUL = styled.ul`\r\n  width: 600px;\r\n  margin-left: 300px;\r\n  height: 46px;\r\n  position: relative;\r\n  color: white;\r\n`;\r\n\r\nconst InningText = styled.li`\r\n  float: left;\r\n  color: white;\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  border-bottom: 2px solid white;\r\n`;\r\n\r\nfunction Inning() {\r\n  return (\r\n    <StyledDiv className=\"ScoreBoard\">\r\n      <InningUL>\r\n        <InningText>1</InningText>\r\n        <InningText>2</InningText>\r\n        <InningText>3</InningText>\r\n        <InningText>4</InningText>\r\n        <InningText>5</InningText>\r\n        <InningText>6</InningText>\r\n        <InningText>7</InningText>\r\n        <InningText>8</InningText>\r\n        <InningText>9</InningText>\r\n        <InningText>10</InningText>\r\n        <InningText>11</InningText>\r\n        <InningText>12</InningText>\r\n        <InningText>R</InningText>\r\n      </InningUL>\r\n    </StyledDiv>\r\n  );\r\n}\r\n\r\nexport default Inning;\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledDiv = styled.p`\r\n  float: right;\r\n  color: red;\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  padding-left: 5px;\r\n  padding-right: 129px;\r\n`;\r\n\r\ninterface Props {\r\n  totalScore: number\r\n}\r\n\r\nconst TotalScore: React.FunctionComponent<Props> = function({totalScore}) {\r\n  return (\r\n    <StyledDiv>\r\n      {totalScore}\r\n    </StyledDiv>\r\n  );\r\n}\r\n\r\nexport default TotalScore;\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport TotalScore from './TotalScore'\r\n\r\nconst StyledDiv = styled.div`\r\n  display: block;\r\n  position: relative;\r\n  width: 900px;\r\n  height: 45px;\r\n  color: white;\r\n  font-size: 24px;\r\n  padding-right: 10px;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n`;\r\n\r\nconst TeamName = styled.p`\r\n  width: 240px;\r\n  float: left;\r\n  color: white;\r\n  font-size: 30px;\r\n  padding-right: 20px;\r\n  text-align: center;\r\n`;\r\n\r\ninterface SelectedTeamProps {\r\n  isSelectedTeam?: boolean;\r\n}\r\n\r\nconst BaseballImage = styled.div<SelectedTeamProps>`\r\n  width: 45px;\r\n  height: 45px;\r\n  float: left;\r\n  background-image: url(\"http://dev-angelo.dlinkddns.com/baseball.png\");\r\n  background-size: 100% 100%;\r\n  opacity: ${props => props.isSelectedTeam ? \"1\" : \"0\"};\r\n`;\r\n\r\nconst InningUL = styled.ul`\r\n  position: relative;\r\n  display: inline;\r\n  color: white;\r\n`;\r\n\r\nconst InningScore = styled.li`\r\n  float: left;\r\n  color: white;\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n`;\r\n\r\ninterface Props {\r\n  teamName: string,\r\n  scores: Array<number>,\r\n  totalScore: number,\r\n  isSelectedTeam: boolean\r\n}\r\n\r\nconst TeamScore: React.FunctionComponent<Props> = function({teamName, scores, totalScore, isSelectedTeam}) {\r\n  return (\r\n    <StyledDiv className=\"ScoreBoard\">\r\n      <BaseballImage isSelectedTeam={isSelectedTeam} />\r\n      <TeamName>{teamName}</TeamName>\r\n      <InningUL>\r\n        {scores.map((score: any, index: any) => (\r\n          <InningScore key={index}>{score}</InningScore>\r\n        ))}\r\n      </InningUL>\r\n      <TotalScore totalScore={totalScore}></TotalScore>\r\n    </StyledDiv>\r\n  );\r\n}\r\n\r\nexport default TeamScore;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled, { keyframes } from 'styled-components'\r\nimport Inning from './publicComponent/Inning'\r\nimport TeamScore from './publicComponent/TeamScore'\r\nimport fetchRequest from '../../util/fetchRequest'\r\nimport GameData from '../../data/GameData'\r\nimport getCookieData from '../../util/getCookieData'\r\n\r\nconst slidein = keyframes `\r\n  0% { opacity: 0 }\r\n  100% { opacity: 1; }\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n  position: absolute;\r\n  width: 1280px;\r\n  height: 720px;\r\n  z-index: 1;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  animation-duration: 0.7s;\r\n  animation-name: ${slidein};\r\n`;\r\n\r\nconst ScoreBoardWrap = styled.div`\r\n  position: relative;\r\n  width: 1000px;\r\n  height: 200px;\r\n  margin: 0 auto;\r\n  margin-top: 20px;\r\n  z-index: 1;\r\n  border: 2px solid white;\r\n  border-radius: 10px;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nfunction ScoreBoard() {\r\n  const [scoreList, setScoreList] = useState<any>(undefined);\r\n\r\n  useEffect(() => {\r\n    const url = process.env.REACT_APP_GAME_SCORE;\r\n    const cvtUrl = url?.replace(`{gameId}`, (GameData.getInstance().getGameId()).toString());\r\n\r\n    fetchRequest(cvtUrl, \"GET\", getCookieData('userId'))\r\n    .then((response) => response.json())\r\n    .then((scoreList) => {\r\n      setScoreList(scoreList);\r\n    })\r\n    .catch((error) => {\r\n      alert(\"주의\");\r\n    });\r\n  }, [])\r\n  \r\n\r\n  return (\r\n    <StyledDiv className=\"ScoreBoard\">\r\n      <ScoreBoardWrap>\r\n        <Inning />\r\n        {scoreList &&\r\n          scoreList.map((scoreInformation: any, index: any) => (\r\n            <TeamScore\r\n              key={index}\r\n              teamName={scoreInformation.team}\r\n              scores={scoreInformation.score}\r\n              totalScore={scoreInformation.totalScore}\r\n              isSelectedTeam={GameData.getInstance().getTeamName() === scoreInformation.team}\r\n            />\r\n          ))}\r\n      </ScoreBoardWrap>\r\n    </StyledDiv>\r\n  );\r\n}\r\n\r\nexport default ScoreBoard;\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst TeamPlayerListWrap = styled.div`\r\n  position: relative;\r\n  width: 640px;\r\n  height: 600px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  color: #fff;\r\n  float: left;\r\n  box-shadow: 0 0 0 2px #fff inset;\r\n`;\r\n\r\nconst TeamName = styled.h1`\r\n  font-size: 30px;\r\n  text-align: center;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst RecordArea = styled.div`\r\n  width: 640px;\r\n  height: 30px;\r\n  position: relative;\r\n  color: gray;\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n  font-size: 24px;\r\n  border-top: 1px solid gray;\r\n  border-bottom: 1px solid gray;\r\n`;\r\n\r\nconst BatterTitle = styled.p`\r\n  width: 150px;\r\n  position: relative;\r\n  float: left;\r\n  text-align: center;\r\n`;\r\n\r\nconst SectionTitle = styled.p`\r\n  width: 70px;\r\n  position: relative;\r\n  float: left;\r\n  text-align: center;\r\n`;\r\n\r\nconst AverageTitle = styled.p`\r\n  width: 140px;\r\n  position: relative;\r\n  float: left;\r\n  text-align: center;\r\n`;\r\n\r\nconst PlayerArea = styled.div`\r\n  width: 640px;\r\n  height: 30px;\r\n  position: relative;\r\n  color: white;\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n  font-size: 24px;\r\n  border-bottom: 1px solid white;\r\n`;\r\n\r\nconst Batter = styled.p`\r\n  width: 150px;\r\n  position: relative;\r\n  float: left;\r\n  text-align: center;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Section = styled.p`\r\n  width: 70px;\r\n  position: relative;\r\n  float: left;\r\n  text-align: center;\r\n`;\r\n\r\nconst Average = styled.p`\r\n  width: 140px;\r\n  position: relative;\r\n  float: left;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledUL = styled.ul`\r\n  width: 640px;\r\n  height: 536px;\r\n  color: #fff;\r\n`;\r\n\r\ninterface Players {\r\n  name: string,\r\n  atBat: number,\r\n  hit: number,\r\n  out: number,\r\n  average: number\r\n}\r\n\r\ninterface Props {\r\n  teamName: string,\r\n  playerInfo: Array<Players>,\r\n  totalBat: number,\r\n  totalHit: number,\r\n  totalOut: number\r\n}\r\n\r\nconst TeamPlayerList: React.FunctionComponent<Props> = function({teamName, playerInfo, totalBat, totalHit, totalOut}) {\r\n  return (\r\n    <TeamPlayerListWrap>\r\n      <TeamName>{teamName}</TeamName>\r\n      <RecordArea>\r\n        <BatterTitle>타자</BatterTitle>\r\n        <SectionTitle>타석</SectionTitle>\r\n        <SectionTitle>안타</SectionTitle>\r\n        <SectionTitle>아웃</SectionTitle>\r\n        <AverageTitle>이번 경기</AverageTitle>\r\n        <AverageTitle>시즌 평균</AverageTitle>\r\n      </RecordArea>\r\n      <StyledUL>\r\n        {playerInfo.map((player:any, index:any) => \r\n        <li key={index}>\r\n          <PlayerArea key={index}>\r\n            <Batter>{player.name}</Batter>\r\n            <Section>{player.atBat}</Section>\r\n            <Section>{player.hit}</Section>\r\n            <Section>{player.out}</Section>\r\n            <Average>{player.atBat > 0 ? (player.hit / player.atBat).toFixed(3) : 0}</Average>\r\n            <Average>{player.average}</Average>\r\n          </PlayerArea>\r\n          </li>\r\n          ) \r\n        }\r\n        <li>\r\n        <PlayerArea>\r\n            <Batter>Totals</Batter>\r\n            <Section>{totalBat}</Section>\r\n            <Section>{totalHit}</Section>\r\n            <Section>{totalOut}</Section>\r\n          </PlayerArea>\r\n        </li>\r\n      </StyledUL>\r\n    </TeamPlayerListWrap>\r\n  );\r\n}\r\n\r\nexport default TeamPlayerList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled, { keyframes } from 'styled-components'\r\nimport TeamPlayerList from './publicComponent/TeamPlayerList'\r\nimport fetchRequest from '../../util/fetchRequest'\r\nimport GameData from '../../data/GameData'\r\nimport getCookieData from '../../util/getCookieData'\r\n\r\nconst slidein = keyframes `\r\n  0% { opacity: 0 }\r\n  100% { opacity: 1; }\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n  position: absolute;\r\n  width: 1280px;\r\n  height: 720px;\r\n  z-index: 1;\r\n  background-color: rgba(0, 0, 0, 0.9);\r\n  animation-duration: 0.7s;\r\n  animation-name: ${slidein};\r\n`;\r\n\r\nfunction PlayerList() {\r\n  const [playerList, setPlayerList] = useState<any>(undefined);\r\n\r\n  useEffect(() => {\r\n    const url = process.env.REACT_APP_GAME_PLAYER;\r\n    const cvtUrl = url?.replace(`{gameId}`, (GameData.getInstance().getGameId()).toString());\r\n\r\n    fetchRequest(cvtUrl, \"GET\", getCookieData('userId'))\r\n    .then((response) => response.json())\r\n    .then((playerList) => {\r\n      setPlayerList(playerList);\r\n    })\r\n    .catch((error) => {\r\n      alert(\"주의\");\r\n    });\r\n  }, [])\r\n  \r\n  return (\r\n    <StyledDiv className=\"PlayerList\">\r\n      {playerList &&\r\n        playerList.map((teamInfo: any, index: any) => (\r\n          <TeamPlayerList key={index}\r\n            teamName={teamInfo.team}\r\n            playerInfo={teamInfo.players}\r\n            totalBat={teamInfo.total.bat}\r\n            totalHit={teamInfo.total.hit}\r\n            totalOut={teamInfo.total.out}\r\n          ></TeamPlayerList>\r\n        ))}\r\n    </StyledDiv>\r\n  );\r\n}\r\n\r\nexport default PlayerList;","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nimport GamePlay from '../components/GamePlay/GamePlay'\r\nimport ScoreBoard from '../components/ScoreBoard/ScoreBoard';\r\nimport PlayerList from '../components/PlayerList/PlayerList';\r\n\r\nfunction GamePlayRouter() {\r\n  return (\r\n    <Router>\r\n      <Route path=\"/api/gameplay\" component={GamePlay} />\r\n      <Route path=\"/api/gameplay/scoreboard\" component={ScoreBoard} />\r\n      <Route path=\"/api/gameplay/playerlist\" component={PlayerList} />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default GamePlayRouter;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled, { keyframes } from 'styled-components'\r\nimport Cookies from 'universal-cookie';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\n\r\nconst StyledDiv = styled.div`\r\n  position: relative;\r\n  width: 1280px;\r\n  height: 720px;\r\n  margin: 0 auto;\r\n  background-color: black;\r\n  background-image: url(\"http://dev-angelo.dlinkddns.com/select_game.jpg\");\r\n  background-size: 100% 100%;\r\n`;\r\n\r\nconst StyledIntroMovie = styled.div`\r\n  position: absolute;\r\n  width: 720px;\r\n  height: 480px;\r\n  margin-top: 126px;\r\n  margin-left: 340px;\r\n`;\r\n\r\nconst IntroButtonAnimation = keyframes `\r\n  0% { background-color: lightgray; }\r\n  100% { background-color: gray; }\r\n`;\r\n\r\nconst IntroButton = styled.button`\r\n  position: relative;\r\n  display: block;\r\n  width: 240px;\r\n  height: 60px;\r\n  border: 3px solid black;\r\n  border-radius: 20px;\r\n  font-size: 28px;\r\n  top: 510px;\r\n  left: 520px;\r\n  margin-bottom: 20px;\r\n\r\n  &:hover {\r\n    color: #cc0000;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active {\r\n    color: #cc0000;\r\n    background-color: gray;\r\n    animation-duration: 0.1s;\r\n    animation-name: ${IntroButtonAnimation};\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\ntype props = RouteComponentProps;\r\n\r\nconst Intro: React.FC<props> = ({history}) => {\r\n  const [isLogIn, setIsLogIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const cookies = new Cookies();\r\n    const userId = cookies.get('userId');\r\n    \r\n    if (userId !== undefined) {\r\n      setIsLogIn(true);\r\n    }\r\n  }, [])\r\n\r\n  function onClickGameStartButton() {\r\n    const cookies = new Cookies();\r\n    const userId: string = cookies.get('userId');\r\n\r\n    if (!userId) {\r\n      alert(\"로그인이 필요한 서비스입니다.\")\r\n      \r\n      const url: string | undefined= process.env.REACT_APP_OAUTH\r\n\r\n      if (url !== undefined) {\r\n        const cvtUrl:string = url;\r\n        window.location.href = cvtUrl;\r\n      }\r\n    }\r\n    else {\r\n      history.push('/gameselect');  \r\n    }\r\n  }\r\n\r\n  function onClickLoginButton() {\r\n    const cookies = new Cookies();\r\n    const userId: string = cookies.get('userId');\r\n\r\n    if (!userId) {\r\n      alert(\"로그인이 필요한 서비스입니다.\")\r\n      \r\n      const url: string | undefined= process.env.REACT_APP_OAUTH\r\n\r\n      if (url !== undefined) {\r\n        const cvtUrl:string = url;\r\n        window.location.href = cvtUrl;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <StyledDiv>\r\n      <StyledIntroMovie>\r\n        <video id=\"test\" muted autoPlay loop width={600}>\r\n          <source src=\"http://dev-angelo.dlinkddns.com/baseball_08.mp4\" type=\"video/mp4\" />\r\n        </video>\r\n      </StyledIntroMovie>\r\n      {!isLogIn && <IntroButton onClick={onClickLoginButton}>로그인</IntroButton>}\r\n      <IntroButton onClick={onClickGameStartButton}>게임하기</IntroButton>\r\n    </StyledDiv>\r\n  );\r\n}\r\n\r\nexport default withRouter(Intro);","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledP = styled.p`\r\n  position: relative;\r\n  padding-top: 40px;\r\n  padding-bottom: 40px;\r\n  font-size: 64px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  color: black;\r\n`;\r\n\r\ninterface Props {\r\n  title: string\r\n}\r\n\r\nconst GameTitle: React.FunctionComponent<Props> = function({title}) {\r\n  return (\r\n    <>\r\n      <StyledP>{title}</StyledP>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameTitle;","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledP = styled.p`\r\n  position: relative;\r\n  padding-top: 10px;\r\n  padding-bottom: 40px;\r\n  font-size: 36px;\r\n  text-align: center;\r\n  color: black;\r\n`;\r\n\r\ninterface Props {\r\n  title: string\r\n}\r\n\r\nconst SelectGamePhrase: React.FunctionComponent<Props> = function({title}) {\r\n  return (\r\n    <>\r\n      <StyledP>{title}</StyledP>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectGamePhrase;","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledVersus = styled.div`\r\n  width: 600px;\r\n  height: 90px;\r\n  position: relative;\r\n  margin: 0 auto;\r\n  background-color: lightgray;\r\n  border-radius: 10px;\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst StyledGameTitle = styled.p`\r\n  width: 600px;\r\n  position: relative;\r\n  font-size: 22px;\r\n  margin: 0 auto;\r\n  color: #cc0000;\r\n  font-weight: bold;\r\n  text-align: center;\r\n`;\r\n\r\ninterface TeamNamePropsType {\r\n  available?: boolean;\r\n}\r\n\r\nconst StyledAwayTeamName = styled.p<TeamNamePropsType>`\r\n  width: 250px;\r\n  float: left;\r\n  position: relative;\r\n  font-size: 30px;\r\n  margin: 0 auto;\r\n  color: ${props => props.available ? \"black\" : \"gray\"};\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin-left: 20px;\r\n\r\n  &:hover {\r\n    color: ${props => props.available ? \"#cc0000\" : \"gray\"};\r\n    cursor: ${props => props.available ? \"pointer\" : \"default\"};\r\n  }\r\n`;\r\n\r\nconst StyledHomeTeamName = styled.p<TeamNamePropsType>`\r\n  width: 250px;\r\n  float: right;\r\n  position: relative;\r\n  font-size: 30px;\r\n  margin: 0 auto;\r\n  color: ${props => props.available ? \"black\" : \"gray\"};\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin-right: 20px;\r\n\r\n  &:hover {\r\n    color: ${props => props.available ? \"#cc0000\" : \"gray\"};\r\n    cursor: ${props => props.available ? \"pointer\" : \"default\"};\r\n  }\r\n`;\r\n\r\nconst StyledVersusText = styled.p`\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  font-size: 20px;\r\n  margin: 0 auto;\r\n  color: gray;\r\n  font-weight: bold;\r\n  margin-top: 10px;\r\n`;\r\n\r\ninterface Props {\r\n  gameId: number,\r\n  awayTeamName: string,\r\n  homeTeamName: string,\r\n  awayTeamId: number,\r\n  homeTeamId: number,\r\n  awayTeamAvailable: boolean,\r\n  homeTeamAvailable: boolean,\r\n  onTeamClick(gameId: number, teamId: number, isAwayTeam: boolean, teamName: string): void,\r\n}\r\n\r\nconst Versus: React.FunctionComponent<Props> = function ({\r\n  gameId,\r\n  awayTeamName,\r\n  homeTeamName,\r\n  awayTeamAvailable,\r\n  homeTeamAvailable,\r\n  awayTeamId,\r\n  homeTeamId,\r\n  onTeamClick,\r\n}) {\r\n  return (\r\n    <StyledVersus>\r\n      <StyledGameTitle>Game {gameId}</StyledGameTitle>\r\n      <StyledAwayTeamName\r\n        {...(awayTeamAvailable && {\r\n          onClick: () => onTeamClick(gameId, awayTeamId, true, awayTeamName),\r\n        })}\r\n        available={awayTeamAvailable}\r\n      >\r\n        {awayTeamName}\r\n      </StyledAwayTeamName>\r\n      <StyledVersusText>VS</StyledVersusText>\r\n      <StyledHomeTeamName\r\n        {...(homeTeamAvailable && {\r\n          onClick: () => onTeamClick(gameId, homeTeamId, false, homeTeamName),\r\n        })}\r\n        available={homeTeamAvailable}\r\n      >\r\n        {homeTeamName}\r\n      </StyledHomeTeamName>\r\n    </StyledVersus>\r\n  );\r\n};\r\n\r\nexport default Versus;","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components'\r\nimport GameTitle from './publicComponent/GameTitle'\r\nimport SelectGamePhrase from './publicComponent/SelectGamePhrase'\r\nimport Versus from './publicComponent/Versus'\r\nimport fetchRequest from '../../util/fetchRequest'\r\nimport Confetti from 'react-confetti'\r\nimport GameData from '../../data/GameData'\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport getCookieData from '../../util/getCookieData'\r\n\r\nconst StyledDiv = styled.div`\r\n  position: relative;\r\n  width: 1280px;\r\n  height: 720px;\r\n  margin: 0 auto;\r\n  background-color: black;\r\n  background-image: url(\"http://dev-angelo.dlinkddns.com/login.jpg\");\r\n  background-size: 100% 100%;\r\n`;\r\n\r\nconst StyledWaitingWrap = styled.div`\r\n  position: absolute;\r\n  width: 1280px;\r\n  height: 720px;\r\n  margin: 0 auto;\r\n  color: white;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1;\r\n`;\r\n\r\nconst StyledWaitingImage = styled.div`\r\n  position: relative;\r\n  width: 720px;\r\n  height: 480px;\r\n  margin: 0 auto;\r\n  margin-top: 125px;\r\n  color: white;\r\n  background-color: black;\r\n  background-image: url(\"http://dev-angelo.dlinkddns.com/UMH_L_BASEBALL.gif\");\r\n  background-size: 100% 100%;\r\n  font-size: 24px;\r\n  z-index: 1;\r\n`;\r\n\r\ntype props = RouteComponentProps;\r\n\r\nconst SelectGame: React.FC<props> = ({history}) => {\r\n  const [waiting, setWaiting] = useState(false);\r\n  const [games, setGames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchRequest(process.env.REACT_APP_GAME_LIST, \"GET\")\r\n    .then((response) => response.json())\r\n    .then((games) => {\r\n      setGames(games);\r\n    })\r\n    .catch((error) => {\r\n      alert(\"잘못된 응답입니다. (requestGameList\");\r\n    });\r\n  }, [])\r\n\r\n  function requestGameAvailable(gameId: number, teamId: number, isAwayTeam: boolean, teamName: string) {\r\n    const url = process.env.REACT_APP_GAME_AVAILABLE;\r\n    const cvtUrl = url?.replace(`{gameId}`, `${gameId}`).replace(`{teamId}`, `${teamId}`);\r\n\r\n    console.log(cvtUrl);\r\n\r\n    fetchRequest(cvtUrl, \"GET\", getCookieData('userId'))\r\n    .then((response) => response.json())\r\n    .then((result) => {\r\n      if (result.available) {\r\n        GameData.getInstance().setIsAwayTeam(isAwayTeam);\r\n        GameData.getInstance().setTeamId(teamId);\r\n        GameData.getInstance().setGameId(gameId);\r\n        GameData.getInstance().setTeamName(teamName);\r\n        history.push('/gameplay');\r\n      }\r\n      else {\r\n        setTimeout(() => {\r\n          requestGameAvailable(gameId, teamId, isAwayTeam, teamName);\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      alert(\"잘못된 응답입니다. (requestGameAvailable)\");\r\n    });\r\n  }\r\n\r\n  function onTeamClick(gameId: number, teamId: number, isAwayTeam: boolean, teamName: string) {\r\n    const url = process.env.REACT_APP_GAME_SELECT;\r\n    const cvtUrl = url?.replace(`{gameId}`, `${gameId}`).replace(`{teamId}`, `${teamId}`);\r\n\r\n    console.log(cvtUrl);\r\n\r\n    fetchRequest(cvtUrl, \"GET\", getCookieData('userId'))\r\n    .then((response) => response.json())\r\n    .then((result) => {\r\n      if (result.available) {\r\n        setWaiting(true);\r\n        requestGameAvailable(gameId, teamId, isAwayTeam, teamName);\r\n      }\r\n      else {\r\n        alert(\"다른사람에 의해 선택된 팀입니다.\");\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      alert(\"잘못된 응답입니다. (onTeamClick)\");\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {waiting && <StyledWaitingWrap><StyledWaitingImage>상대방을 기다리는중입니다...</StyledWaitingImage></StyledWaitingWrap>}\r\n    {waiting !== true && <Confetti\r\n      width={1280}\r\n      height={720}\r\n      opacity={0.5}\r\n      numberOfPieces={30}\r\n    ></Confetti>}\r\n    <StyledDiv>\r\n      <GameTitle title=\"Baseball Game Service\"></GameTitle>\r\n      <SelectGamePhrase title=\"참가할 게임을 선택하세요\"></SelectGamePhrase>\r\n      {games !== undefined && games.map((game:any, index:number) => \r\n        <Versus key={index} gameId={game.game} awayTeamName={game.away} homeTeamName={game.home} \r\n                awayTeamAvailable={game.awayUser === \"none\"} homeTeamAvailable={game.homeUser === \"none\"}\r\n                awayTeamId={game.awayId} homeTeamId={game.homeId}\r\n                onTeamClick={onTeamClick}>\r\n        </Versus>\r\n        ) \r\n      }\r\n    </StyledDiv>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(SelectGame);","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nimport GamePlayRouter from './GamePlayRouter';\r\nimport Intro from '../components/Intro/Intro'\r\nimport SelectGame from '../components/SelectGame/SelectGame';\r\n\r\nfunction AppRouter() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact={true} path=\"/api\">\r\n          <Intro />\r\n        </Route>\r\n        <Route path=\"/api/gameselect\">\r\n          <SelectGame />\r\n        </Route>\r\n        <Route path=\"/api/gameplay\">\r\n          <GamePlayRouter />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\r\nimport './lib/style/reset.css'\r\nimport './App.css';\r\n\r\nimport AppRouter from './router/AppRouter'\r\n\r\nfunction App() {\r\n  return (\r\n      <div className=\"App\">\r\n        <AppRouter />\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <div className=\"Bg\">\r\n    <App />\r\n    </div>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}